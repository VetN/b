G = {
    "А": {
        "С": 4},
    "С": {
        "Е": 4,
        "Т": 3,
        "А": 4,
        "З": 5},
    "Е": {
        "С": 4,
        "Т": 4},
    "Т": {
        "С": 3,
        "Е": 4,
        "Д": 6},
    "З": {
        "П": 3,
        "С": 5},
    "П": {
        "З": 3,
        "В": 4},
    "В": {
        "Д": 3,
        "П": 4},
    "Д": {
        "В": 3,
        "Т": 6}

}



# создаем словарь для хранения расстояний ставим 100 расстояние заведомо больше любого максим знач
d = {k : 100 for k in G.keys()}

# берем стартовую вершину (предок для всех остальных)
#D["Адмиралтейская"] = 0
start_k = "А"
d[start_k] = 0

# создаем словарь для хранения булев значен(true если вершина просмотрена)
u = {k : False for k in G.keys()}

# словарь в котором храним вершину-предок с минимальным расстоянием
p = {k : None for k in G.keys()}

# создаем цикл, выбирая наименьшее d из просмотренных
for _ in range(len(d)):
    min_k = min([k for k in u.keys() if not u[k]], key=lambda x: d[x])
    print("min",min_k)
    # перебираем все смежные вершины
    for v in G[min_k].keys():
        if d[v] > d[min_k] +G[min_k][v]:
            d[v] = min(d[v], d[min_k] + G[min_k][v]) # минимум фиксируем
            p[v] = min_k # записываем как предок
        u[min_k] = True # просмотренную вершину помечаем


    print("u", u)
    print('d', d)
    print('p', p)
# цикл идет по вершинам в словаре р находим вершины кратчайшего пути
some_station = []
poin = some_station
    # идем пока не придем в стартовую точку
while poin is not None:
    print("poin", poin)
    poin = p[poin]